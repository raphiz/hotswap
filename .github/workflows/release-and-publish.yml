name: Create github release and publish

on:
  push:
    tags:
      - 'v*'

jobs:
  release-and-publish:
    name: Release and Publish
    runs-on: ubuntu-latest
    if: github.event.repository.fork == false
    steps:
      - uses: actions/checkout@v4.2.0
      - uses: nixbuild/nix-quick-install-action@v30
      - uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1.5G

          # purge caches
          purge: true
          purge-prefixes: nix-${{ runner.os }}-
          purge-created: 0
          purge-primary-key: never
          gc-max-store-size: 0

      - name: Publish plugin to Gradle Plugin Portal
        run: nix develop --impure --command gradle publishPlugins
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHARASE }}
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          PROJECT_VERSION: ${{ github.ref_name }}
      - name: Publish package to Maven Central
        run: nix develop --impure --command gradle :lib:publishToSonatype
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHARASE }}
          ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.OSSRH_PASSWORD }}
          PROJECT_VERSION: ${{ github.ref_name }}
      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.changelog.outputs.changes }}
          name: Release ${{ github.ref_name }}
